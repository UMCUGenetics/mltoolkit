% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randomForestTrainAndTest.R
\name{randomForestTrainAndTest}
\alias{randomForestTrainAndTest}
\title{Random forest train and test workflow}
\usage{
randomForestTrainAndTest(train, test = NULL, colname.response, balance = F,
  incl.expected.response = T, ntreeTry = 500, stepFactor = 1.2,
  improve = 0.001, plot = F, trace = F, equal.oobe.decision = "max",
  mtry = NULL, randomForest.ntree = 500, importance = T, ...)
}
\arguments{
\item{train}{Train dataset. A dataframe of observations as rows and features as columns. \strong{Important:} input
matrix/dataframe should include the response vector as a column.}

\item{test}{Test dataset. If test is NULL, the train dataset will be used for prediction. A dataframe of observations as rows and features as columns. 
\strong{Important:} input matrix/dataframe should include the response vector as a column.}

\item{colname.response}{The name of a column containing the response classes.}

\item{balance}{Balancing of classes by simple up/down sampling.}

\item{incl.expected.response}{Whether to include the response vector as a column in the dataframe containing the
prediction probabilities. This must be TRUE for the downstream statistics plots to work.}

\item{ntreeTry}{From \pkg{randomForest::tuneRF()}. Number of decision trees to create when determining the optimal mtry
value.}

\item{stepFactor}{From \pkg{randomForest::tuneRF()}. Inflation rate of mtry for each iteration.}

\item{improve}{From \pkg{randomForest::tuneRF()}. Relative improvement in out of bag error (OOBE) must be by this much for
the search to continue.}

\item{plot}{From \pkg{randomForest::tuneRF()}. Whether to plot the OOB error as function of mtry.}

\item{trace}{From \pkg{randomForest::tuneRF()}. Whether to print the progress of the search.}

\item{equal.oobe.decision}{If there are multiple mtry with min(OOB error), choose the highest or lowest mtry value ('max' or 'min' respectively)?}

\item{mtry}{\pkg{randomForest::randomForest()}. Number of features to use for building each decision tree}

\item{randomForest.ntree}{From \pkg{randomForest::randomForest()}. Number of decision trees to create when building the
random forest model from the training set.}

\item{importance}{From \pkg{randomForest::randomForest()}. Whether to return within the object created by
randomForest::randomForest() the MeanDecreaseGini and MeanDecreaseAccuracy. This must be TRUE for the downstream importance
plots to work.}

\item{...}{Other arguments that can be passed to \pkg{randomForest::tuneRF()} and \pkg{randomForest::randomForest()}.}
}
\value{
Returns a list containing the random forest model trained on the train dataset and the prediction probabilities
on the test set.
}
\description{
This function determines the best mtry on a training set, and subsequently creates a randomforest model with
this mtry value. This function is also the core of each randomForestCV() iteration. \strong{Important:} input
matrix/dataframe should include the response vector as a column.
}
